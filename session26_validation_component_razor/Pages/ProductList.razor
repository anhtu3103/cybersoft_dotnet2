@page "/products"
@using session26_validation_component_razor.Components;
@using session26_validation_component_razor.Models

<div class="container">
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2 class="text-center">Danh sách sản phẩm</h2>
        <button class="btn btn-secondary position-relative" data-bs-toggle="modal" data-bs-target="#cartModal">
            <i class="fa fa-shopping-cart"></i>
            @*thẻ span hiện số lượng sản phẩm trên giỏ hàng *@
            <span class="position-absolute bg-danger rounded-pill top-0 start-100 translate-middle badge">
                @Cart.Count
            </span>
        </button>
    </div>
</div>
@* Popup giỏ hàng *@
<div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cartModalLabel">🛒 Giỏ hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @* show number of product in cart to UI *@
                @if (Cart.Any())
                {
                    <ul class="list-group">
                        @foreach(var item in Cart)
                        {
                            <li class="d-flex justify-content-between align-items-center list-group-item">
                                <div>
                                    <strong>@item.Name</strong>
                                    <span>@item.Quantity</span>
                                </div>
                                <span class="text-danger fw-bold">@(Convert.ToDouble(item.Price) * item.Quantity)</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-center text-muted">Giỏ hàng trống</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-success">Thanh toán</button>
            </div>
        </div>
    </div>
</div>


<div class="container">
    <div class="row">
        @foreach (var product in productModels)
        {
            <div class="col-md-4 mb-4">
                <ProductItem product="product" OnAddToCart="HandleAddToCart">
                    @* truyền html, css xuống cho component con [ProductItem] *@
                    <p class="text-secondary text-center">Sản phẩm chất lượng cao</p>
                </ProductItem>
            </div>
        }
    </div>
</div>


@code {
    private List<ProductModel> productModels = new()
    {
        new ProductModel {
            Id = "1",
            Name = "Air blade 2020",
            Price = "60000000",
            ImageUrl = "ab.png",
            Quantity = 10
        },
        new ProductModel {
            Id = "2",
            Name = "Air blade 2020",
            Price = "60000000",
            ImageUrl = "ab.png",
            Quantity = 10
        },
        new ProductModel {
            Id = "3",
            Name = "Air blade 2020",
            Price = "60000000",
            ImageUrl = "ab.png",
            Quantity = 10
        }
    };

    // tạo object carts để chứa ds sản phẩm trên giỏ hàng
    private List<ProductModel> Cart = new();

    //Function handle add product to cart
    // send function to component to receive data
    private void HandleAddToCart(ProductModel product)
    {
        var existingProduct = Cart.FirstOrDefault(p => p.Name == product.Name);
        if(existingProduct != null)
        {
            existingProduct.Quantity++;
        }
        else
        {
            Cart.Add(new ProductModel
            {
                Name = product.Name,
                Price = product.Price,
                ImageUrl = product.ImageUrl,
                Quantity = 1
            });
        }
    }
}
